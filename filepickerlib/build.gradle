plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.dokka'

}
apply from: 'bintray-config.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'androidx.core:core-ktx:1.3.2'
    compile 'androidx.appcompat:appcompat:1.2.0'
    compile 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    compile 'com.airbnb.android:epoxy:4.3.1'
    kapt 'com.airbnb.android:epoxy-processor:4.3.1'
    compile ("com.airbnb.android:mvrx:1.3.0"){
        exclude group: "org.jetbrains.kotlin", module: "kotlin-android-extensions-runtime" }

    compile "io.reactivex.rxjava2:rxjava:2.2.19"
    compile "io.reactivex.rxjava2:rxandroid:2.1.1"
    compile 'com.github.promeg:tinypinyin:2.0.3'
    compile "com.samskivert:jmustache:1.14"

}


apply from: 'installv1.gradle'
apply from: 'bintrayv1.gradle'

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives generateJavadoc //javadocJar
    archives generateSourcesJar //sourcesJar
}
//同时添加三个方法
//task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
//    outputFormat = 'javadoc'
//    outputDirectory = javadoc.destinationDir
//}
//task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
//    group = 'jar'
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//task generateSourcesJar(type: Jar) {
//    group = 'jar'
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//artifacts {
//    archives generateJavadoc //javadocJar
//    archives generateSourcesJar //sourcesJar
//}